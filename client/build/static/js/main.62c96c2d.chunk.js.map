{"version":3,"sources":["img/static-cover.jpg","components/CommentModal/CommentModal.js","components/SideDrawer/SideDrawer.js","components/HeadCard/HeadCard.js","components/YearRangeSlider/YearRangeSlider.js","components/HoverCard/HoverCard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","TextArea","Input","CommentModal","state","visible","inputName","inputComment","commentData","handleOk","e","preventDefault","submitData","author","_this","content","alert","axios","post","concat","props","data_id","then","res","console","log","data","catch","err","handleCancel","setState","evt","this","target","value","_this2","get","_this3","react_default","a","createElement","modal","title","length","onOk","onCancel","footer","es_button","key","onClick","type","list","className","itemLayout","dataSource","renderItem","item","comment","actions","avatar","datetime","input","onChange","updateNameValue","placeholder","updateCommentValue","autosize","React","Component","Panel","Collapse","callback","SideDrawer","isOpen","showCommentModal","showModal","refs","child","populateComments","componentDidUpdate","BurgerMenu","Object","assign","customBurgerIcon","customCrossIcon","noOverlay","alt","src","data_coverImgUrl","data_dpImgUrl","data_name","icon","data_location","data_capacity","data_matchDate","tag","style","color","data_team1","data_team2","collapse","width","defaultActiveKey","header","data_summary","components_CommentModal_CommentModal","ref","HeadCard","card","id","bordered","cover","require","tooltip","placement","href","rel","RangeSlider","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","updateRangeSlider","rangeSliderCurrentValue","populateMarkerTooltip","yearList","yearListLength","Math","round","js_default","maxValue","minValue","HoverCard","react_ui_cards","cardClass","name","positionName","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","App","location1","lat","lng","markerData","zoom","toggleDrawer","dataId","fetchedMarkerData","i","push","_id","data_latitude","data_longitude","position1","components_SideDrawer_SideDrawer","pageWrapId","outerContainerId","Map","zoomControl","center","TileLayer","attribution","url","map","Marker","position","Tooltip","sticky","components_HoverCard_HoverCard","YearRangeSlider_YearRangeSlider","components_HeadCard_HeadCard","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.62c96c2d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/static-cover.b26feaaf.jpg\";","import React from 'react';\r\nimport { Modal, List, Comment, Avatar, Form, Button, Input} from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport axios from 'axios';\r\nimport './CommentModal.css';\r\n// import InputCommentForm from '../InputComment/InputComment';\r\n// import { Comment, List } from 'antd';\r\n// import moment from 'moment';\r\n\r\n// var Search = Input.Search;\r\n\r\nconst { TextArea } = Input;\r\n\r\nclass CommentModal extends React.Component {\r\n    state = { visible: false,\r\n            inputName: '',\r\n            inputComment: '',\r\n            // submitData: {\r\n            //   author: this.state.inputName,\r\n            //   content: this.state.inputComment\r\n            // },\r\n            commentData: [\r\n            // {\r\n            //   author: 'Han Solo',\r\n            //   avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\r\n            //   content: (\r\n            //     \"We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.\"\r\n            //   ),\r\n            // }\r\n          ]\r\n        }\r\n\r\n    updateNameValue(evt) {\r\n      this.setState({\r\n        inputName: evt.target.value\r\n      });\r\n    }\r\n\r\n    updateCommentValue(evt) {\r\n      this.setState({\r\n        inputComment: evt.target.value\r\n      });\r\n    }\r\n\r\n    handleOk = (e) => {\r\n      e.preventDefault();\r\n\r\n      const author = this.state.inputName;\r\n      const content = this.state.inputComment;\r\n\r\n      const submitData = {\r\n        author, \r\n        content\r\n      }\r\n\r\n      if(this.state.inputName === '' || this.state.inputComment === ''){\r\n        alert(\"No field can be empty.\")\r\n      }else{\r\n        alert(this.state.inputName + '  ' + this.state.inputComment);\r\n        axios.post(`http://localhost:4000/data/add/comments/${this.props.data_id}`, {submitData})\r\n        .then(res => {\r\n          console.log(res);\r\n          console.log(res.data);\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n      }\r\n    }\r\n  \r\n    handleCancel = (e) => {\r\n      console.log(e);\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n    }\r\n\r\n    populateComments(){//this is called from SideDrawer button click\r\n      this.setState({\r\n          visible: true\r\n      })\r\n      axios.get(`http://localhost:4000/data/comments/${this.props.data_id}`)\r\n        .then(res => {\r\n          this.setState({commentData: res.data});\r\n        });\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n          <Modal\r\n            title={`${this.state.commentData.length} comment(s)`}\r\n            visible={this.state.visible}\r\n            onOk={this.handleOk}\r\n            onCancel={this.handleCancel}\r\n            footer={[\r\n              <Button key=\"cancel\" onClick={this.handleCancel}>Cancel</Button>,\r\n              <Button key=\"submit\" type=\"primary\" onClick={this.handleOk}>Submit Comment</Button>,\r\n            ]}\r\n            >\r\n                <List\r\n                    className=\"comment-list\"\r\n                    // header={`${this.state.commentData.length} comment`}\r\n                    itemLayout=\"horizontal\"\r\n                    dataSource={this.state.commentData}\r\n                    renderItem={item => (\r\n                    <Comment\r\n                        actions={item.actions}\r\n                        author={item.author}\r\n                        avatar={item.avatar}\r\n                        content={item.content}\r\n                        datetime={item.datetime}\r\n                    />\r\n                )}\r\n            />,\r\n                <hr />\r\n                <Input value={this.state.inputName} onChange={evt => this.updateNameValue(evt)} className='name-input' placeholder=\"Enter name\" />\r\n                <TextArea value={this.state.inputComment} onChange={evt => this.updateCommentValue(evt)} placeholder=\"Enter Comment\" autosize />\r\n                {/* <Button type=\"primary\" icon=\"check\">Submit</Button> */}\r\n          </Modal>\r\n          \r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default CommentModal;","import React from \"react\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport { Icon, Collapse, Tag, Button } from 'antd';\r\nimport axios from 'axios';\r\nimport './SideDrawer.css';\r\nimport CommentModal from '../CommentModal/CommentModal';\r\n// import { configConsumerProps } from \"antd/lib/config-provider\";\r\n// import { Card, Icon, Avatar } from 'antd';\r\n// const { Meta } = Card;\r\n// const Panel = Collapse.Panel;\r\n\r\n// function callback(key) {\r\n//   console.log(key);\r\n// }\r\nconst Panel = Collapse.Panel;\r\n\r\nfunction callback(key) {\r\n  console.log(key);\r\n}\r\n\r\nclass SideDrawer extends React.Component{\r\n  state = {\r\n    data: {},\r\n    isOpen: true,\r\n    showCommentModal: false\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({ showCommentModal: true });\r\n    this.refs.child.populateComments();\r\n  }\r\n\r\n  componentDidUpdate = () => {\r\n    axios.get(`http://localhost:4000/data/${this.props.data_id}`)\r\n        .then(res => {\r\n          this.setState({data: res.data});\r\n        });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      \r\n      \r\n      // <Menu isOpen={this.state.isOpen} {...props} noOverlay >\r\n      <Menu isOpen={this.state.isOpen} customBurgerIcon={ false } customCrossIcon={ false } {...this.props} noOverlay >\r\n        <img alt=\"Cover Pic\" src={ this.state.data.data_coverImgUrl } className=\"drawer-header\" />\r\n        <img alt=\"drawer dp\" src={ this.state.data.data_dpImgUrl } className=\"drawer-dp\" />\r\n        <h3 className=\"drawer-heading\">{this.state.data.data_name}</h3>\r\n        <p className=\"drawer-location\"><span><Icon type=\"pushpin\" /></span>{this.state.data.data_location}</p>\r\n        <p className=\"drawer-location\"><span><Icon type=\"team\" /></span>{this.state.data.data_capacity}</p>\r\n        <p className=\"drawer-date drawer-location\">{this.state.data.data_matchDate}</p>\r\n        <Tag style={{color: '#fff'}} color=\"#f50\">{this.state.data.data_team1}</Tag>\r\n        <Tag style={{color: '#f50'}} color=\"orange\">vs</Tag>\r\n        <Tag style={{color: '#fff'}} color=\"#f50\">{this.state.data.data_team2}</Tag>\r\n        <Collapse style={{width:'100%'}} defaultActiveKey={['1']} onChange={callback}>\r\n          <Panel header=\"Description\" key=\"1\">\r\n            <p>{this.state.data.data_summary}</p>\r\n          </Panel>\r\n        </Collapse>\r\n        <Button style={{color: '#fff'}} type=\"primary\" onClick={this.showModal}>\r\n            Show Comments\r\n          </Button>\r\n          <CommentModal showModal={this.state.showCommentModal} data_id={this.props.data_id} ref=\"child\" />\r\n        {/* <a onClick={this.toggleDrawer}><Icon type=\"arrow-left\" />Hide this shit</a> */}\r\n      </Menu>\r\n      \r\n);\r\n  }\r\n}\r\n\r\nexport default SideDrawer;","import React from 'react';\r\nimport { Card, Icon, Tooltip } from 'antd';\r\nimport './HeadCard.css';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst HeadCard = () => {\r\n    return(\r\n\r\n        // <Card className=\"head-card\">\r\n        //     {/* <CardImg top width=\"100%\" src=\"https://placeholdit.imgix.net/~text?txtsize=33&txt=318%C3%97180&w=318&h=180\" alt=\"Card image cap\" /> */}\r\n        //     <CardBody>\r\n        //       <CardTitle>Welcome to IPL matches</CardTitle>\r\n        //       {/* <CardSubtitle>Card subtitle</CardSubtitle> */}\r\n        //       <CardText>This map will show you year wise IPL matches played in different stadiums on India.<br /> Just click on a marker on map to know more or slide the timeline slider on right.</CardText>\r\n        //       <Button>Button</Button>\r\n        //     </CardBody>\r\n        //   </Card>\r\n        <Card \r\n        id=\"head-card\" \r\n        title=\"Welcome to IPL Timeline\" \r\n        bordered={false} \r\n        style={{ width: 300 }} \r\n        cover={<img alt=\"example\" src={ require('../../img/static-cover.jpg')} />}\r\n        actions={[\r\n            <Tooltip placement=\"bottom\" title=\"About\"><Icon type=\"bulb\" /></Tooltip>, \r\n            <Tooltip placement=\"bottom\" title=\"Fork on GitHub\"><a href='https://github.com/gaurav3017' target='_blank' rel=\"noopener noreferrer\"><Icon type=\"github\" /></a></Tooltip>,\r\n            <Tooltip placement=\"bottom\" title=\"Find me on LinkedIn\"><a href='https://www.linkedin.com/in/gaurav-singh-90551275/' target='_blank' rel=\"noopener noreferrer\"><Icon type=\"linkedin\" /></a></Tooltip>\r\n        ]}>\r\n          <p>This map will show you year wise IPL matches played in different stadiums on India.<br /> \r\n          Just click on a marker on map to know more or slide the timeline slider on right.</p>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default HeadCard;","import React from 'react';\r\nimport InputRange from 'react-input-range';\r\n// import { Card, CardImg, CardText, CardBody,CardTitle, CardSubtitle, Button } from 'reactstrap';\r\nimport './YearRangeSlider.css';\r\nimport 'react-input-range/lib/css/index.css';\r\nimport axios from 'axios';\r\nimport 'antd/dist/antd.css';\r\nimport { Card } from 'antd';\r\n\r\nclass RangeSlider extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { \r\n        value: 0,\r\n        yearList: [],\r\n        yearListLength: '',\r\n      };\r\n    }\r\n\r\n    componentDidMount() {//Populating years in year Range Slider\r\n      axios.get('http://localhost:4000/data/year-list')\r\n        .then(res => {\r\n          // console.log(res.data);\r\n          this.setState({ \r\n            value: Math.round((res.data[res.data.length-1] + res.data[0])/2),//By default Slider will always be in the mid of the min and max value\r\n            yearList: res.data,\r\n            yearListLength: res.data.length-1\r\n          });\r\n        });\r\n        // this.props.populateMarkerTooltip(this.state.value);//First time populate the markers on map\r\n    }\r\n\r\n    updateRangeSlider = (rangeSliderCurrentValue) => {\r\n      this.setState({\r\n        value: rangeSliderCurrentValue\r\n      });\r\n      this.props.populateMarkerTooltip(this.state.value);\r\n      \r\n    }\r\n\r\n    // updateRangeSlider = (value) => {\r\n    //   this.setState({ value: value });\r\n    //   axios.get(`http://localhost:4000/data/year/${this.state.value}`)\r\n    //     .then(res => {\r\n    //       console.log(res.data[0].data_name + ' ' + res.data[0].data_coverImgUrl + ' ' + res.data[0].data_dpImgUrl + ' ' +\r\n    //       res.data[0].data_location + ' ' + res.data[0].data_latitude + ' ' + res.data[0].data_longitude);\r\n    //       //DP, cover, name, location, longi, lati\r\n    //       this.setState({\r\n    //         data_name: ''\r\n    //       });\r\n    //     });\r\n    // }\r\n\r\n    render() {\r\n      return (\r\n          <div className=\"year-slider-card\">\r\n                <Card \r\n                  id=\"range-slider-card\" \r\n                  title=\"Move slider to change year\" \r\n                  bordered={false} style={{ width: 300 }}>\r\n                    <p>Move slider to see stadiums where IPL matches were played that year.<br /> </p><br />\r\n                    <InputRange\r\n                      maxValue={this.state.yearList[this.state.yearListLength]}\r\n                      minValue={this.state.yearList[0]}\r\n                      value={this.state.value}\r\n                      onChange={this.updateRangeSlider}\r\n                    /><br />\r\n                </Card>\r\n          </div>\r\n        );\r\n    }\r\n  }\r\nexport default RangeSlider\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { UserCard } from 'react-ui-cards';\r\n\r\nconst HoverCard = (props) => {\r\n\r\n  return (\r\n      <div>\r\n        <UserCard\r\n          cardClass='float'\r\n          href='#'\r\n          header={props.data_coverImgUrl}\r\n          avatar={props.data_dpImgUrl}\r\n          name={props.data_name}\r\n          positionName={props.data_location}\r\n        />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HoverCard;","import React, { Component } from 'react';\nimport { Map, Marker, TileLayer, Tooltip } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport L from 'leaflet';\nimport SideDrawer from './components/SideDrawer/SideDrawer';\nimport HeadCard from './components/HeadCard/HeadCard';\nimport YearRangeSlider from './components/YearRangeSlider/YearRangeSlider';\nimport './App.css';\nimport axios from 'axios';\nimport HoverCard from './components/HoverCard/HoverCard';\n\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\nclass App extends Component {\n  state = {\n    location1: {//State containing the current location of user\n      lat: 23.014363,\n      lng: 84.741078,\n    },\n    markerData: [],\n    isOpen: false,\n    data_id: 0,\n    zoom: 5.45//default zoom level\n  }\n\n  toggleDrawer = (dataId) => {\n    this.setState({isOpen: true});\n    this.setState({data_id: dataId});\n  }\n\n  populateMarkerTooltip = (rangeSliderCurrentValue) => {//this method is passed to YearRangeSlider.js\n    var fetchedMarkerData = [];\n    axios.get(`http://localhost:4000/data/year/${rangeSliderCurrentValue}`)\n        .then(res => {\n          for(let i = 0; i < res.data.length; i++) {\n              fetchedMarkerData.push({\n                data_id: res.data[i]._id,\n                data_name: res.data[i].data_name, \n                data_coverImgUrl: res.data[i].data_coverImgUrl,\n                data_dpImgUrl: res.data[i].data_dpImgUrl,\n                data_location: res.data[i].data_location,\n                data_latitude: res.data[i].data_latitude,\n                data_longitude: res.data[i].data_longitude\n              });\n              \n          }\n          this.setState({\n            markerData: fetchedMarkerData,\n            isOpen: false\n          });\n        });\n  }\n\n\n\n  // componentDidMount() {\n    // navigator.geolocation.getCurrentPosition((position) => {//Browser will prompt user for their current location\n      // this.setState({\n      //   location: {\n      //     lat: position.coords.latitude,\n      //     lng: position.coords.longitude\n      //   },\n      //   haveUsersLocation: true,\n      //   zoom: 6//zoom level after detecting user location\n  //     });\n  //   }, ()=> {\n  //     console.log(\"Location was not granted by user. Still trying to fetch location from IP address...\");\n  //     fetch('https://ipapi.co/json')\n  //       .then(res => res.json())\n  //       .then(location => {\n  //         // console.log(location);\n  //         this.setState({\n  //           location: {\n  //             lat: location.latitude,\n  //             lng: location.longitude\n  //           },\n  //           haveUsersLocation: true,\n  //           zoom: 6//zoom level after detecting user location\n  //         });\n  //       });\n  //   });\n  // }\n\n\n  render() {\n    let position1 = [this.state.location1.lat, this.state.location1.lng];\n    return (\n      <div className=\"map\" id=\"map-container\">\n          <SideDrawer data_id = {this.state.data_id} isOpen={this.state.isOpen} pageWrapId={\"main-map\"} outerContainerId={\"map-container\"} />\n          <Map zoomControl={false} className=\"map\" id=\"main-map\" center={position1} zoom={ this.state.zoom }>\n            <TileLayer\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n             {\n               this.state.markerData.map(data => {\n                //  this.setState({data_id: data.data_id});\n                 return(\n                        <Marker onClick={() => this.toggleDrawer(data.data_id)} key={data.data_id} position={[data.data_latitude, data.data_longitude]} >\n                            <Tooltip sticky>\n                              <HoverCard\n                                data_name = {data.data_name}\n                                data_coverImgUrl = {data.data_coverImgUrl}\n                                data_dpImgUrl = {data.data_dpImgUrl}\n                                data_location = {data.data_location}\n                              />\n                            </Tooltip>\n                        </Marker>\n                      );\n                  })\n                }  \n              } \n            \n          </Map>\n          <YearRangeSlider populateMarkerTooltip={ this.populateMarkerTooltip } />\n          <HeadCard />\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport 'leaflet/dist/leaflet.css';\n// import 'bootstrap/dist/css/bootstrap.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}